<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //button[@id='login-btn-lp']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //button[@id='login-btn-lp']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //input[@name='username']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //input[@name='username']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //input[@name='username']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //input[@name='username']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //input[@id='pass-field']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //input[@id='pass-field']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //input[@id='pass-field']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //input[@id='pass-field']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //button[normalize-space()='Login']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //button[normalize-space()='Login']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
    </line>
    <line>
      <![CDATA[Before navigating to: 'https://yopmail.com']]>
    </line>
    <line>
      <![CDATA[Navigated to:'https://yopmail.com']]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: 	//input[@id='login']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: 	//input[@id='login']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //body//div[@class='mctn']//div]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //body//div[@class='mctn']//div]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.cssSelector: span[class='ellipsis']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.cssSelector: span[class='ellipsis']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.cssSelector: span[class='ellipsis']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.cssSelector: span[class='ellipsis']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //tbody//tr[2]/td[1]//p]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //tbody//tr[2]/td[1]//p]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //input[@id='pass-field']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //input[@id='pass-field']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.cssSelector: #login-btn-lp[type='submit']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.cssSelector: #login-btn-lp[type='submit']]]>
    </line>
    <line>
      <![CDATA[Trying to find Element By : By.xpath: //span[@class='capitalize mv-short']]]>
    </line>
    <line>
      <![CDATA[Found Element By : By.xpath: //span[@class='capitalize mv-short']]]>
    </line>
    <line>
      <![CDATA[Exception occured: java.lang.NoSuchMethodError: 'java.util.Optional org.openqa.selenium.devtools.HasDevTools.maybeGetDevTools()']]>
    </line>
  </reporter-output>
  <suite started-at="2022-07-28T11:23:55Z" name="Suite" finished-at="2022-07-28T11:24:58Z" duration-ms="63628">
    <groups>
    </groups>
    <test started-at="2022-07-28T11:23:55Z" name="Test" finished-at="2022-07-28T11:24:58Z" duration-ms="63628">
      <class name="newTestcase.Tc001_Portfolio_Test">
        <test-method is-config="true" signature="extentFileCreation()[pri:0, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:53:55Z" name="extentFileCreation" finished-at="2022-07-28T16:53:55Z" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentFileCreation -->
        <test-method is-config="true" signature="launchApplication(java.lang.String)[pri:0, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:53:55Z" name="launchApplication" finished-at="2022-07-28T16:54:06Z" duration-ms="11444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method is-config="true" signature="getFunctionName(java.lang.reflect.Method)[pri:0, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:54:06Z" name="getFunctionName" finished-at="2022-07-28T16:54:06Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void base.TestBase.RequireLogin() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFunctionName -->
        <test-method signature="RequireLogin()[pri:1, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:54:06Z" name="RequireLogin" finished-at="2022-07-28T16:54:49Z" duration-ms="42337" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //button[@id='login-btn-lp']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //button[@id='login-btn-lp']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //input[@name='username']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //input[@name='username']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //input[@name='username']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //input[@name='username']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //input[@id='pass-field']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //input[@id='pass-field']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //input[@id='pass-field']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //input[@id='pass-field']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //button[normalize-space()='Login']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //button[normalize-space()='Login']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//div[@class='alert alert-danger']]]>
            </line>
            <line>
              <![CDATA[Before navigating to: 'https://yopmail.com']]>
            </line>
            <line>
              <![CDATA[Navigated to:'https://yopmail.com']]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: 	//input[@id='login']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: 	//input[@id='login']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //body//div[@class='mctn']//div]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //body//div[@class='mctn']//div]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.cssSelector: span[class='ellipsis']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.cssSelector: span[class='ellipsis']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.cssSelector: span[class='ellipsis']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.cssSelector: span[class='ellipsis']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //tbody//tr[2]/td[1]//p]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //tbody//tr[2]/td[1]//p]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //input[@id='pass-field']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //input[@id='pass-field']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.cssSelector: #login-btn-lp[type='submit']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.cssSelector: #login-btn-lp[type='submit']]]>
            </line>
            <line>
              <![CDATA[Trying to find Element By : By.xpath: //span[@class='capitalize mv-short']]]>
            </line>
            <line>
              <![CDATA[Found Element By : By.xpath: //span[@class='capitalize mv-short']]]>
            </line>
          </reporter-output>
        </test-method> <!-- RequireLogin -->
        <test-method is-config="true" signature="getFunctionName(java.lang.reflect.Method)[pri:0, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:54:49Z" name="getFunctionName" finished-at="2022-07-28T16:54:49Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void base.TestBase.PortfolioTest() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFunctionName -->
        <test-method signature="PortfolioTest()[pri:2, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:54:49Z" name="PortfolioTest" finished-at="2022-07-28T16:54:54Z" duration-ms="5401" status="FAIL">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'Avirajs-MacBook-Air-2.local', ip: 'fe80:0:0:0:ea:205c:40c5:ff6%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.2', java.version: '16.0.2'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'Avirajs-MacBook-Air-2.local', ip: 'fe80:0:0:0:ea:205c:40c5:ff6%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.2', java.version: '16.0.2'
Driver info: driver.version: unknown
	at org.openqa.selenium.By$ByClassName.<init>(By.java:310)
	at org.openqa.selenium.By.className(By.java:100)
	at org.openqa.selenium.support.AbstractFindByBuilder.buildByFromShortFindBy(AbstractFindByBuilder.java:43)
	at org.openqa.selenium.support.FindBy$FindByBuilder.buildIt(FindBy.java:85)
	at org.openqa.selenium.support.pagefactory.Annotations.buildBy(Annotations.java:79)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.<init>(DefaultElementLocator.java:58)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.<init>(DefaultElementLocator.java:46)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocatorFactory.createLocator(DefaultElementLocatorFactory.java:33)
	at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:57)
	at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:110)
	at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:102)
	at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:89)
	at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:77)
	at base.PageBase.setWebDriver(PageBase.java:29)
	at pages.PortFolioPage.<init>(PortFolioPage.java:130)
	at base.TestBase.PortfolioTest(TestBase.java:364)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PortfolioTest -->
        <test-method is-config="true" signature="getFunctionName(java.lang.reflect.Method)[pri:0, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:54:54Z" name="getFunctionName" finished-at="2022-07-28T16:54:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void newTestcase.Tc001_Portfolio_Test.portfolioTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFunctionName -->
        <test-method signature="portfolioTest()[pri:3, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:54:54Z" name="portfolioTest" finished-at="2022-07-28T16:54:58Z" duration-ms="3575" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "pages.PortFolioPage.selectLoanbyNumber(String, String, String)" because "this.objPort" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "pages.PortFolioPage.selectLoanbyNumber(String, String, String)" because "this.objPort" is null
	at newTestcase.Tc001_Portfolio_Test.portfolioTest(Tc001_Portfolio_Test.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- portfolioTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:newTestcase.Tc001_Portfolio_Test@543295b0]" started-at="2022-07-28T16:54:58Z" name="tearDown" finished-at="2022-07-28T16:54:58Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.NoSuchMethodError">
            <message>
              <![CDATA['java.util.Optional org.openqa.selenium.devtools.HasDevTools.maybeGetDevTools()']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoSuchMethodError: 'java.util.Optional org.openqa.selenium.devtools.HasDevTools.maybeGetDevTools()'
	at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:441)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:115)
	at jdk.proxy2/jdk.proxy2.$Proxy17.close(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.close(EventFiringWebDriver.java:216)
	at base.TestBase.tearDown(TestBase.java:213)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.afterRun(TestRunner.java:1012)
	at org.testng.TestRunner.run(TestRunner.java:636)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoSuchMethodError -->
          <reporter-output>
            <line>
              <![CDATA[Exception occured: java.lang.NoSuchMethodError: 'java.util.Optional org.openqa.selenium.devtools.HasDevTools.maybeGetDevTools()']]>
            </line>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- newTestcase.Tc001_Portfolio_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
